from Perso import Perso
class Deku(Perso):
    @staticmethod
    def deku_smile(self):
        a, b, c, d, e, f = Perso.decompose_text(self)
        print("⠀⠀⠀⠀⠀⠈⣩⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡤⠄⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠰⢶⣶⣶⣦⣬⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣥⣄⡀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠙⢿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣶⡀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⢴⣿⣿⣿⣿⠟⠋⠀⣀⣤⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠈⠛⢿⣿⣿⣿⣷⣤⣀⠈⠻⣿⣿⣿⣦⡀⠀⠀⠀⠀")
        print("⠀⠀⣠⣾⣿⣿⣿⡿⢃⡀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⣡⣿⣿⣿⣿⣿⣿⣷⣄⠀⡈⠙⢿⣿⣿⣿⣷⡀⡌⠛⠿⠿⠿⠂⠀⠀⠀")
        print("⣶⣿⣿⣿⣿⣿⣿⣿⡟⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢁⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⢿⣦⡀⢻⣿⣿⣿⣷⣿⣦⡀⠀⠀⠀⢲⣤⣀⠀⠀⠀⠀⠀⠀⣠⠞⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠈⠁⠈⠁⠈⠁⢳⡀")
        print("⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⠟⢻⣿⣿⠟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣦⡀⠀⠀⠙⢿⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⢳⠀")
        print("⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠸⣿⠇⢄⠘⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⢠⠏⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⠈⡇ ")
        print("⠛⢛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡻⠿⢷⣿⣿⡿⠓⠒⠒⠒⠦⠽⡄⠈⢣⡈⠻⣿⣿⣿⣿⡿⠀⢿⣿⣿⣿⣿⣿⣷⡄⠉⢻⡇⠀⠀⠀⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⠀⢳ ")
        print("⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠻⠹⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣆⠈⣿⣿⣿⠁⠀⠘⢿⣿⣿⣿⣿⣿⣿⡄⠀⠓⠀⠀⠀⠀⠀⠀⠀⡇", a, "⢳ ")
        print("⣿⣿⣿⣿⡟⣹⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠙⠀⠀⠈⠑⠢⣄⠀⠀⠀⠀⠀⠈⢧⠈⡿⠉⠉⠓⠦⣄⣃⠻⣿⣿⣿⣿⣷⠀⣆⠀⡀⠀⠀⠀⠀⢸⠃", b, "⢸ ")
        print("⢙⣿⣿⡟⠸⢉⣽⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⠀⠀⠀⠀⣀⣤⠤⠤⠄⠀⠀⠀⢹⣤⣿⣿⣿⣿⣿⣠⣿⣦⣽⣶⠀⠀⠀⢸⠀", c, "⢸ ")
        print("⠈⣽⣿⢧⡀⡌⠹⣝⡏⠹⠄⠀⠀⠰⠖⠚⠛⠛⠿⠶⣦⣔⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠸⠁⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⣼⠀", d, "⢸ ")
        print("⠴⠋⠀⠀⠱⡘⢦⣽⠷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⢠⣄⣀⣀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠈⠛⣆", e, "⢸ ")
        print("⠀⠀⣀⣠⣄⠘⢦⠀⢀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠙⠛⠻⢶⣄⠀⠀⠀⣼⡏⢹⣿⣿⣿⣿⣏⠉⠋⠀⠀⠀⠀⢸", f, "⣸ ")
        print("⠀⣾⣿⣿⣿⣆⣾⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⠀⣸⢻⡇⢸⣿⡿⠿⣿⣿⠀⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⢸⠃ ")
        print("⢰⣿⣿⣿⣿⣷⢹⢸⡟⠉⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢃⡤⢙⡾⣿⣿⣄⠈⠻⠀⠀⠀⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⢀⡏⠀ ")
        print("⣾⣿⣿⣿⣿⣿⠈⡀⠀⠈⢻⡄⠀⠀⠀⠀⠀⣴⣖⠒⠒⠒⠄⠤⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠟⠋⡠⠋⠀⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣆⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⢀⡞⠀⠀ ")
        print("⣿⣿⣿⣿⣿⣿⡷⠃⠀⠀⢾⠙⣆⠀⠀⠀⠀⢏⠸⣟⠲⠦⢄⣀⣀⡀⠈⠉⠀⣤⣀⠀⠀⠀⠀⠀⢀⣾⣤⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⢤⣀⠀⠀⠀                                      ⢀⣠⠔⠋⠀⠀⠀ ")
        print("⣿⣿⣿⣿⣿⡿⠉⠳⣄⠀⢸⠀⠈⠣⡀⠀⠀⠀⠑⢌⡙⠒⠤⠤⠈⣉⣉⡹⠏⣻⠟⠀⠀⠀⠀⢀⣾⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉ ")
        print("⣿⣿⣿⣿⠟⠀⠀⠀⣨⠷⢼⣦⡀⠀⠙⢦⡀⠀⠀⠀⠈⠑⠒⠤⠤⠤⢤⣖⠊⠁⠀⠀⠀⣠⢴⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⣿⣿⣿⠏⠀⠀⢀⡼⠋⠀⠀⣹⠻⢷⣤⣈⣻⣦⣄⠀⠀⠀⠀⢀⡠⠖⠁⠈⠑⠤⣠⠔⠋⠀⢸⣿⠿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠛⣿⣿⣦⡀⢀⡞⠁⠀⢀⡾⠁⠀⠀⠈⣽⠻⢿⣿⣿⣶⡤⠔⠉⠀⠀⠀⢸⠀⠀⠈⠢⡀⣠⡿⣟⠲⡘⢿⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠈⠻⣿⣿⣿⣀⠀⢠⡞⠀⠀⠀⠀⡼⠁⠀⠀⠀⢩⠏⠀⠀⠀⣠⡀⠀⠘⡄⠀⣀⡀⢹⡙⢦⠈⠣⡘⢦⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⢹⣿⣿⣿⡖⣿⣀⠀⠀⢀⡼⠁⠀⠀⠀⢠⠏⠀⠀⠀⢘⣿⠃⠀⠀⡁⠀⠹⠇⠀⢣⠀⠳⡀⠘⢦⣿⡦⠀⠀⠀⠀⠀⠀⠀⠀⠀\n")
    @staticmethod
    def deku_emerveille(self):
        a, b, c, d, e, f = Perso.decompose_text(self)
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⣦⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣴⣿⣿⡄⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠈⠲⢤⣀⠀⠐⠠⠀⢀⡀⠀⠀⠀⠀⠄⠉⠡⠹⢿⣿⣿⣿⣿⣿⣿⣿⠿⣻⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⠀⠀⠀⣀⣠⡴")
        print("⠀⠀⠀⠀⠀⠀⣈⠉⠉⢀⣴⣿⡿⠟⠉⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⠋⢀⣾⣿⣿⣿⣿⣿⣿⣿⣷⠈⠻⡟⣿⠇⠀⢠⣾⠿⠋⠀")
        print("⠀⠀⠀⠀⢀⠖⠁⢀⡴⠟⠉⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⣿⣿⣿⣿⣿⣿⣃⣴⣿⣿⣿⣿⣿⣿⣿⡿⠋⠀⠀⠀⠉⠉⠀⠀⠉⠁⠀⠀⠀")
        print("⡑⠤⣀⣰⣏⠀⠘⠉⢀⠄⠀⡴⠃⢀⣠⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠈⠁⠈⠁⠈⠁⢳⡀")
        print("⠙⣦⣄⣀⣀⣀⣤⡾⠃⠀⣸⣡⣾⣿⣿⣿⣿⣿⣿⣿⡿⠟⣻⣿⣿⣿⣿⣿⠏⢹⣿⣿⣿⣿⣿⣧⣾⣿⠀⠀⠀⣷⡄⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⢳⠀")
        print("⠀⠀⣙⡿⠿⠿⠋⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⡿⠛⠧⣙⠿⠿⠿⠛⠿⢋⠁⠀⣠⣿⣿⣿⣿⣿⣿⣿⣿⡀⣀⣠⣿⣿⡌⡇⠀⠀⠀⠀⠳⠀⠀⠀⠀⢠⠏⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⠈⡇ ")
        print("⠀⠀⠀⣀⣤⣤⣤⣀⡀⣰⣿⣿⣿⡟⠁⡐⠏⠀⠀⠀⠀⠁⠈⠉⠉⠉⠁⠐⠛⠻⠥⢌⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⡇⠀⠀⣧⡀⠀⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⠀⢳ ")
        print("⠀⡷⠚⠉⠛⠿⣿⣿⣿⣿⣿⠟⠛⢷⣄⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣇⠀⣶⣼⣿⣶⠀⠀⠀⠀⡇", a, "⢳ ")
        print("⠘⠁⢤⡀⠒⠺⣿⣿⣿⣿⡏⠀⣰⠞⠁⠀⠀⠙⢷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⠋⠑⠚⠉⢹⣿⣿⣿⣿⡿⢹⣿⣿⣿⣦⣿⣿⣿⣿⠀⠀⠀⢸⠃", b, "⢸ ")
        print("⠀⠀⠈⢻⣷⣿⣿⣿⣿⣿⡇⣸⠃⠀⠀⢠⣯⣿⡆⠋⠀⠀⠀⠀⠀⢰⣾⠛⠋⠙⠛⠳⣦⡀⣠⣾⣿⣿⣿⣿⣇⣾⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⢸", c, "⢸ ")
        print("⠀⠀⠀⠀⠙⠛⣿⣿⣿⣿⡇⡇⠀⠀⠀⣾⣿⣏⡁⠀⠀⠀⠀⠀⠀⠀⢀⣴⣶⡄⠀⠈⠹⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⣼ ", d, "⢸ ")
        print("⠀⠀⠀⠀⠀⢠⣿⠋⡿⢻⠇⡇⠀⠀⠀⠈⠛⠋⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⡏⠉⠀⠀⠀⢸⣿⠟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠈⠛⣆", e, "⢸ ")
        print("⠀⠀⠀⠀⠀⠈⠋⠀⠀⢸⠀⡘⠢⠄⣀⣀⠤⠔⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠛⠀⠀⠀⠀⠀⣿⡀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⢸", f, "⣸ ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⡟⠢⠘⠆⠀⠀⠀⠀⠰⠃⠀⠀⠀⠀⠀⠣⣀⠀⠀⠀⠀⠀⠀⠀⣰⠇⠀⣰⣿⣿⣿⣿⣿⠟⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⢸⠃ ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⢀⣇⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠂⠠⠄⠤⠤⠚⠁⠀⠘⠿⣿⣿⣿⣿⡟⠀⣿⣿⢿⣿⡛⠛⢿⠀⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⢀⡏⠀ ")
        print("⠀⠀⠀⠀⠀⢀⡤⠚⠁⠸⡀⠀⠀⠀⣴⣾⣭⣉⣒⠒⠤⠤⢄⣀⠀⠀⠀⠀⠠⠀⠘⢀⠀⠀⠀⠀⣠⠼⢋⡴⠋⣠⢾⣿⣇⡀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠸⣆⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⢀⡞⠀⠀ ")
        print("⠀⠀⠀⢀⠔⠁⠀⠀⠀⢀⣷⡀⠀⠀⢻⡿⠋⠂⠘⠛⠿⠶⣒⠲⢿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠿⠋⣠⠞⢡⣤⠟⣷⣾⣶⣄⣀⣀⠀⠀⠀⠀⠀⠀⠈⠳⢤⣀⠀⠀⠀                                      ⢀⣠⠔⠋⠀⠀⠀ ")
        print("⠀⠀⢀⠏⠀⠀⠀⠀⢠⠋⡸⡹⣄⠀⠀⠙⠢⣄⠀⠀⠀⠀⠈⢻⣾⠟⠀⠀⠀⠀⠀⠀⢀⣴⠗⠦⡤⠄⢺⠃⣴⣿⣯⣾⣟⣵⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉ ")
        print("⠀⠀⡎⠀⠀⠀⠀⢠⠃⢠⢃⠃⠈⠣⡀⠀⠀⠀⠉⠒⠒⠒⠊⠉⠀⠀⠀⠀⠀⣀⣤⡾⢋⡟⠀⡜⢁⡔⢁⣾⣿⣿⣋⣽⣿⣿⣿⣿⣿⣿")
        print("⠀⠸⠀⠀⠀⠀⠀⡎⠀⡞⢸⠀⠀⠀⠈⠳⢄⡀⠀⠀⠀⠀⠀⢀⣀⣠⣤⣶⣿⠟⠋⠀⣼⢃⡞⠀⠀⢠⢋⡿⣫⣾⣿⣿⣿⣿⣿⣿⢿⣿")
        print("⠀⠇⠀⠇⠀⠀⢰⠁⠀⣇⠈⣣⡀⠀⠠⢄⠀⢨⡟⢯⠙⠛⠿⠿⢿⣿⣋⠁⠀⠀⠀⢐⣿⠏⠀⠀⢠⠇⣿⣿⣿⣿⣿⣿⣿⡿⢿⡷⠞⠉")
        print("⠀⠀⠀⠀⠀⠀⣼⠀⠀⠸⡇⠀⠉⠛⠛⡿⣷⣼⣄⠀⠳⣄⡀⠀⠀⠀⠀⣀⣠⣤⠖⠙⠃⠀⠀⢀⠎⢰⣿⣿⣿⣿⣿⠿⣿⡶⠋⠀⠀⠀")
        print("⠀⠀⠀⡄⠀⠀⡇⠀⠀⠀⠹⣄⢠⠔⢹⠃⠈⠻⣏⠳⣄⠀⠉⠓⠒⠛⢉⠕⢋⣠⡶⢯⣀⠈⠉⠉⣰⣿⣿⣿⣿⢿⣯⠞⣫⠄⠀⠀⠀⠀")
        print("⠀⠀⠀⠃⠀⢰⠃⠀⠀⠀⣠⠞⠀⢀⡎⠀⠀⠀⠌⠓⣌⠀⠀⠀⢀⡔⢁⠔⠋⢁⣠⡾⣿⣿⣿⣿⣿⣿⣿⣿⣷⠟⢡⠎⠀⠀⠀⠀⠀\n")
    @staticmethod
    def deku_combat(self):
        a, b, c, d, e, f = Perso.decompose_text(self)
        print("⠀⠀⠰⣤⣀⠀⠀⠀⠀⠈⠂⠀⠀⠘⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢤⡀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠀⣿⣿⣿⣿⡇⠀⠀⠀⢻")
        print("⠀⠀⠀⢿⣯⡉⠓⠒⠒⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣷⣶⣤⣤⣴⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⢰⣿⣿⣿⣿⡏⠀⠀⠀⠿")
        print("⠀⠀⠀⠘⣿⣿⣆⡰⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠻⣿⣿⣿⣿⣷⡀⢦⣤⣤⠴⠆⠀⠀⠀⠀⠀⠀⠀⣀⣀⣠⣤⣤⣤⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣁⣀⣀⣀⠀⠀⢼")
        print("⠀⠀⠀⠀⠀⠹⣿⣿⣿⡿⡇⠀⠉⠀⠀⠀⠀⠀⠀⠲⠾⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⣸")
        print("⠀⠀⠀⠀⠀⢀⡼⠛⠁⢀⠃⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⣉⣭⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⢿⣿⣿⣿⣿⣿⣿⡇⠀⣿")
        print("⠀⠀⠀⠀⠀⠏⠀⠀⣴⣷⠟⠁⠀⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠘⣿⣿⣿⣿⣿⣿⡇⠰⣿")
        print("⠀⠀⠀⠀⢀⡠⠶⠛⢸⣁⠀⠀⠀⠈⠻⣿⣿⣾⣷⣶⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠉⣰⣿⣿⡿⠋⢸⡿⠀⠀⠀⢹⣿⣿⣿⣿⣿⣁⣾⣿⠀⠀⠀⠀⠀⠀⣠⠞⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠈⠁⠈⠁⠈⠁⢳⡀")
        print("⠀⠀⠀⠀⠀⠀⡴⠛⠂⢉⡳⢤⡀⠀⠀⠀⠉⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢛⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣡⣾⣿⣿⡟⠁⠀⠘⠩⡄⠀⠀⢰⣿⣿⣿⣿⡿⢹⣿⣿⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⢳⠀")
        print("⠀⠀⠀⢀⣠⠞⠁⠀⠀⠀⠀⣊⡻⣦⣀⠀⠀⣠⡄⣶⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⢁⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⣸⡇⠀⠀⠈⣿⣿⡿⠃⠀⠀⠛⠃⠀⠀⠀⠀⢠⠏⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⠈⡇ ")
        print("⠠⢴⣶⣯⣥⣄⣤⣤⣴⣶⣾⡟⠻⡄⠉⠉⣿⣿⣿⣿⣿⠿⢿⣿⣿⣿⣿⠏⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⣠⣾⣿⠀⠀⠀⠀⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾", a, "⢳ ")
        print("⠀⠀⠈⠙⠻⠿⢿⣿⣿⡿⠃⣀⣾⣧⣦⡀⢹⣿⡿⣿⣧⢀⣿⣿⣿⣿⡏⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⣠⣾⣿⣿⡏⠀⠀⣠⡾⠀⠀⣀⣀⣀⣀⣠⣶⠀⠀⠀⠀⡇", b, "⢸ ")
        print("⠀⠀⣀⡤⣄⠀⠀⢀⡟⢡⣾⣿⣿⣿⠛⣻⡆⢧⠀⠀⣹⣿⡿⠿⠛⣿⣡⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢏⣴⣾⣿⣿⣿⣿⠠⠤⠴⠿⠤⢠⣾⣿⣿⣿⡿⣯⣿⠀⠀⠀⢸⠃", c, "⢸ ")
        print("⢠⠞⠁⠀⠀⣵⢚⣿⣴⠟⣯⣾⣿⣿⠀⡟⠠⠼⠦⠼⢉⣉⢧⠀⢸⣿⣿⣿⣿⣿⣿⣿⣵⣿⣿⣿⣿⡿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⡆⣠⣶⣿⣿⣿⠿⠛⠁⣾⣿⣿⣿⠀⠀⠀⢸ ", d, "⢸ ")
        print("⠀⠀⢀⣀⠀⣸⡼⠋⠁⢰⣿⣿⣿⡿⠀⡇⠀⠀⠀⠀⡀⣿⣿⣧⣿⣿⣿⣿⡿⢛⣿⣿⣿⡿⠛⠉⠀⠀⠠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⠟⠁⠀⠀⢰⣿⡿⠻⠻⠀⠀⠀⣼⠀", e, "⢸ ")
        print("⠀⣠⡾⠁⠀⠹⡅⠀⣴⣿⢿⡿⣿⡇⠀⣇⠀⠀⠀⠀⢿⣿⡿⣿⣿⣿⡯⠁⠀⢹⣿⠟⠁⠀⠀⠀⠀⣰⣾⣿⣿⣿⠟⠋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣥⡄⠀⠀⠀⠿⠛⠀⠀⠀⠀⠀⠈⠛⣆", f, "⣸ ")
        print("⢀⠍⠀⠀⠀⠀⣧⠈⠁⢀⣼⢿⣿⡧⠘⠚⢦⡀⠀⠀⠈⠉⢡⡿⢛⡇⠀⠀⠀⠟⠁⠀⠀⠀⣀⣴⡿⠿⠛⠋⠉⠀⢠⣼⣿⣿⣿⣿⣿⣿⠟⢻⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⠀⡇ ")
        print("⠁⠀⠀⣠⣾⡿⠿⣧⣒⡿⢋⣿⣿⠃⠀⠂⠀⠉⠛⠒⠒⠒⠛⠀⠀⣷⠀⠘⢦⣄⣀⣀⣤⢾⣿⠟⣛⣟⡛⠓⠦⣤⡌⠛⠶⣖⣛⡯⢭⣄⣀⣿⣿⣿⣿⠅⠀⠀⠀⠀⢀⣴⡦⠀⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⢸⠃ ")
        print("⠀⣠⣼⡿⠋⠀⠀⠀⠙⠲⣼⣿⣿⠀⠀⠀⠀⠀⠀⠀⢸⣿⣀⡴⠟⠁⠀⠲⠄⠙⠿⠏⠀⠀⠀⡘⢿⣿⣿⠀⠀⢀⣠⣾⣿⣿⣿⣿⣿⣶⣿⣿⣿⢟⣁⣤⣶⣶⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⢀⡏⠀ ")
        print("⣨⠟⠋⠀⠀⢀⡴⠶⢦⣤⡏⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⢻⡏⠀⠀⠀⠀⠀⠀⠰⡄⠀⠀⠀⠀⢻⣿⣿⡟⠀⠐⠋⣱⣿⣿⣿⣿⣿⣿⣿⣿⣯⣷⣿⣿⡿⢿⣿⣿⣿⠟⠟⠀⠀⠀⠀⠀⠀⠀⠀⠸⣆⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⢀⡞⠀⠀ ")
        print("⠀⠀⠀⠀⠀⢋⣴⠛⠻⣾⠀⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠑⠀⠀⠀⠀⠀⠀⠀⠹⡀⠀⠀⠀⠈⠉⠉⠀⣀⣴⣾⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⡿⠋⠀⣸⡿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⢤⣀⠀⠀⠀                                      ⢀⣠⠔⠋⠀⠀⠀ ")
        print("⠀⠀⠀⠀⡴⠋⠀⠀⠠⣿⡆⢹⣿⣧⠀⠀⠀⠐⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⣀⠀⠀⠀⠀⠀⠀⠀⣩⠿⠋⠉⠁⠀⢀⣼⡿⢫⡿⠋⠄⠁⣰⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉ ")
        print("⠀⠀⠀⠈⠀⠀⠀⠀⠀⣿⣧⠀⣙⣿⣦⠀⠀⠀⢸⣌⠙⠒⠤⢤⣀⣀⣀⠀⠀⠀⠀⠀⠀⠈⠙⠒⠦⠤⢴⠒⠋⠁⠀⠀⢀⡼⣻⠿⢵⡣⠋⢀⣀⣴⡾⠻⣦⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠀⠤⠴⢒⣹⣿⣾⣿⣿⣿⣆⠀⠀⠘⣎⠑⠲⠄⠀⠀⠈⠉⠉⠙⢢⣄⠀⠀⠀⠀⠀⠀⢶⣈⠳⢄⣤⠤⠤⠯⠼⠥⣤⣀⣤⣶⠋⠹⠿⠁⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠠⣖⣋⡉⠉⠉⠛⠻⣿⣿⣿⣧⠀⠀⠈⠳⣄⠀⠀⠀⠀⠐⠒⠒⠲⡿⣷⠀⠀⠀⠀⠀⠀⠉⢀⡞⠋⢀⣠⡴⠚⠋⢉⡏⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⢠⠔⠋⠉⢛⣿⣶⣄⠀⠈⠙⢿⣿⣷⡀⠈⠓⠈⠙⠲⢤⣀⣀⣀⣀⡤⠿⠋⠀⠀⠀⠀⠀⢀⣠⡞⠀⣠⡿⣿⡇⠀⠀⠀⠹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⣰⠟⠁⠉⠻⣷⣄⠀⠀⠻⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣾⣿⡿⠀⢠⡟⣰⣿⣧⡀⠀⠀⠀⠀⠀⠀⣤⠤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠀⠸⠋⠀⠀⣲⣾⣿⣿⣷⡄⠀⠸⣟⠛⢦⣀⣀⣀⣀⣀⣀⣀⣠⣤⣤⣴⣶⣿⣿⣿⣿⣿⠃⢀⣿⣿⠟⠁⠻⣿⣿⡟⠀⠀⠀⠀⠻⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⢹⣿⡟⠉⠉⡿⣆⠀⠹⡄⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⠇⢀⡾⠋⠀⠀⠀⠀⣸⢏⡔⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣟⢀⣴⣧⠀⠹⣆⠀⢹⡄⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠛⠉⢀⡼⠁⠀⠀⠀⣠⠞⡵⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⣦⠀⢹⡆⠀⢳⡀⠀⣈⣿⠿⠿⠟⠋⠉⢁⣀⣀⣤⣴⠶⠛⠋⠁⠀⢀⡴⠏⣱⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⣿⣿⣆⡀⢻⡀⠀⠉⢉⣀⣀⣤⣤⡶⠚⠛⠉⢉⠴⠋⠀⠀⠀⢀⣤⠞⠉⠴⠋⠀⠹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⢟⢾⣷⠚⠛⠉⠉⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⣀⡴⠞⠉⢹⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n")
    @staticmethod
    def deku_text(self):
        a, b, c, d, e, f = Perso.decompose_text(self)
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞⠳⣄⣀⠀⠀⡟⢶⣧⠀⢠⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⣠⣴⡶⢤⣇⠀⠀⠈⠉⠙⠳⡀⠈⠳⣿⠈⠳⢤⣀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣧⡀⣀⣠⠽⠇⠀⠀⠐⣤⣀⡀⠀⠀⠀⣦⡀⠀⡀⠀⠘⣦⡼⡇⠀⠀⠀⠀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣆⢸⡀⢻⣅⣀⣀⠀⠀⠠⣤⣬⣿⣿⣷⣀⡀⢻⣿⣷⣿⡄⠀⡟⠁⠧⢤⣀⠀⠀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠛⠓⢠⣝⠋⠉⣍⣠⣤⣬⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⡷⠀⠰⢶⠻⢦⡀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⢾⣍⠁⠀⢸⣿⣷⣶⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣧⡶⠆⠀⢳⣀⠀⠀⡀⠀    ⠀⠀⠀⠀⠀⠀⠀⣠⠞⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠁⠈⠁⠈⠁⠈⠁⢳⡀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠾⢻⣤⠀⢀⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣟⣯⠙⠑⢶⣦⣄⠀⢬⡭⠟⠀⠀    ⠀⠀⠀⠀⠀⠀⣰⠏⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⢳⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⢠⣀⣀⣠⠖⠋⠀⢠⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣼⡆⢨⣿⣿⣆⢤⣙⣦⠀⠀    ⠀⠀⠀⠀⠀⢠⠏⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⠈⡇ ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⢿⡉⠀⠸⢶⣾⣿⣿⣿⣿⣿⣿⣿⡿⠻⣾⣿⣿⣿⣿⣿⡥⣿⣿⣿⣿⣿⣷⣠⡙⣿⠉⠀⢳⡙⠀⠀    ⠀⠀⠀⠀⠀⡾⠀⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⠀⢳ ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⢢⣭⣷⣤⣾⣿⣿⣿⣿⣿⡿⣻⣿⣿⣀⡛⢿⣿⣿⠟⠋⠀⠈⣿⣿⣿⣿⣿⣧⣷⣼⡇⢦⣤⣵⠀⠀    ⠀⠀⠀⠀⠀⡇", a, "⢳ ") 
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢉⣿⣿⣿⣿⣿⣿⢛⡟⠁⠀⠀⡈⢳⠀⠈⠋⣠⠖⠚⠛⠳⣽⡟⣿⣿⣿⣿⣿⡇⠈⢳⡙⠀⠀    ⠀⠀⠀⠀⢸⠃", b, "⢸ ") 
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⢛⣿⣿⣿⣿⡿⢸⠀⠀⠀⣾⣟⠁⠀⠀⠀⠃⣴⡶⠀⠀⠈⡇⣿⣿⣿⣿⣿⣷⡄⠘⢿⣤⠄    ⠀⠀⠀⠀⢸", c, "⢸ ") 
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠛⠻⣯⣿⣿⡉⠈⢦⣀⣀⣀⣀⠄⢀⠀⠀⣄⠙⠋⠀⠀⣠⠿⣻⣿⣿⣿⣿⣿⣿⡖⠋⠁⠀    ⠀⠀⠀⠀⣼⠀", d, "⢸ ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⠚⢷⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠈⠑⠒⠒⠞⠉⠚⣿⣻⣿⣿⠟⣿⠃⠁⠀⠀⠀    ⠀⠀⠀⠈⠛⣆", e, "⢸ ") 
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡑⠚⡄⠀⠀⣶⣮⣭⣭⣉⣉⣐⣒⣤⣀⠀⠀⠀⡼⠛⢛⠿⠟⠀⠁⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀⢸", f, "⣸ ") 
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣄⠘⢄⠀⠙⢿⡢⠤⠤⠤⠬⠿⣿⠟⠀⢀⠞⠑⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀⢸⡆⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⠀⢸⠃ ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣏⣿⣿⣿⣿⣷⣦⣷⣄⠀⢀⣩⡄⠒⠈⠉⠀⣀⠔⢋⣤⣾⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀⠘⣷⠀⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⠀⢀⡏⠀ ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡾⠟⣻⣧⠚⡹⢿⣿⣿⡿⠛⠁⣸⡌⠢⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀⠀⠸⣆⠀⠀⠀⠀⠀⠀⠀                                       ⠀⠀⢀⡞⠀⠀ ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⡿⠴⠒⢻⣿⣏⢀⡔⢉⡏⠀⠟⠀⡇⠸⡆⠘⣿⠿⡿⠻⡟⢯⡹⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀⠀⠀⠈⠳⢤⣀⠀⠀⠀                                      ⢀⣠⠔⠋⠀⠀⠀ ")
        print("⠀⠀⠀⠀⠀⣠⣴⡿⣿⢱⠁⠀⠀⠈⢿⣿⣿⣄⣸⡀⠰⠦⠀⠃⠀⣷⠀⡇⠀⠙⡄⢸⣤⣿⣿⡙⢦⡀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉ ")
        print("⠀⢠⣶⣶⣿⠟⠁⣴⡏⠘⠀⠀⠀⠀⠀⠻⣿⡇⢸⠉⡓⠦⣠⣆⣠⣼⠄⣷⡶⢶⣿⣿⣿⠟⠁⠉⠓⢿⣆⡀⠀⠀⠀⠀⠀                                                 ")
        print("⣿⣿⣿⣿⡇⠀⠀⣿⣧⢰⣀⠀⠀⠀⢀⣴⢹⡟⠾⣧⣿⠀⡼⠀⣰⠏⣰⣿⣥⡿⡿⠋⠁⠀⠀⠀⠀⢀⠆⣵⣄⡀⠀⠀⠀                                                 ")
        print("⢀⣹⣿⣿⣿⡄⠀⣿⢸⡜⠿⠧⠄⢐⣚⣫⡼⠁⠀⠈⠻⣄⡇⣰⣯⠴⠛⠉⣼⢰⣣⠀⠀⠀⠀⠀⢀⠎⣸⠋⢿⣷⡀⠀⠀                                                 ")
        print("⠈⠻⣿⣿⣿⣿⣄⣿⡄⠙⠛⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠘⠉⠉⠀⠀⠀⠀⠻⣬⣛⠤⢄⡀⣠⣤⠎⣴⠃⠀⠈⢿⣷⡀⠀                                                 ")
        print("⠀⠀⠈⠻⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣙⣒⠮⣭⣉⡼⠁⢀⠀⠀⠈⢿⣷⡀                           \n")
    @staticmethod
    def deku():
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡞⠳⣄⣀⠀⠀⡟⢶⣧⠀⢠⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢀⣠⣴⡶⢤⣇⠀⠀⠈⠉⠙⠳⡀⠈⠳⣿⠈⠳⢤⣀⠀⣄⠀⠀⠀⠀⠀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣧⡀⣀⣠⠽⠇⠀⠀⠐⣤⣀⡀⠀⠀⠀⣦⡀⠀⡀⠀⠘⣦⡼⡇⠀⠀⠀⠀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣆⢸⡀⢻⣅⣀⣀⠀⠀⠠⣤⣬⣿⣿⣷⣀⡀⢻⣿⣷⣿⡄⠀⡟⠁⠧⢤⣀⠀⠀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⠛⠓⢠⣝⠋⠉⣍⣠⣤⣬⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⡷⠀⠰⢶⠻⢦⡀⠀⠀⠀                                                 ")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⢾⣍⠁⠀⢸⣿⣷⣶⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⣧⡶⠆⠀⢳⣀⠀⠀⡀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠾⢻⣤⠀⢀⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣟⣯⠙⠑⢶⣦⣄⠀⢬⡭⠟⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⢠⣀⣀⣠⠖⠋⠀⢠⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣼⡆⢨⣿⣿⣆⢤⣙⣦⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⢿⡉⠀⠸⢶⣾⣿⣿⣿⣿⣿⣿⣿⡿⠻⣾⣿⣿⣿⣿⣿⡥⣿⣿⣿⣿⣿⣷⣠⡙⣿⠉⠀⢳⡙⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⢢⣭⣷⣤⣾⣿⣿⣿⣿⣿⡿⣻⣿⣿⣀⡛⢿⣿⣿⠟⠋⠀⠈⣿⣿⣿⣿⣿⣧⣷⣼⡇⢦⣤⣵⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢉⣿⣿⣿⣿⣿⣿⢛⡟⠁⠀⠀⡈⢳⠀⠈⠋⣠⠖⠚⠛⠳⣽⡟⣿⣿⣿⣿⣿⡇⠈⢳⡙⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⢛⣿⣿⣿⣿⡿⢸⠀⠀⠀⣾⣟⠁⠀⠀⠀⠃⣴⡶⠀⠀⠈⡇⣿⣿⣿⣿⣿⣷⡄⠘⢿⣤⠄    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠛⠻⣯⣿⣿⡉⠈⢦⣀⣀⣀⣀⠄⢀⠀⠀⣄⠙⠋⠀⠀⣠⠿⣻⣿⣿⣿⣿⣿⣿⡖⠋⠁⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⠚⢷⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠈⠑⠒⠒⠞⠉⠚⣿⣻⣿⣿⠟⣿⠃⠁⠀⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡑⠚⡄⠀⠀⣶⣮⣭⣭⣉⣉⣐⣒⣤⣀⠀⠀⠀⡼⠛⢛⠿⠟⠀⠁⠀⠀⠀⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣄⠘⢄⠀⠙⢿⡢⠤⠤⠤⠬⠿⣿⠟⠀⢀⠞⠑⠒⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣏⣿⣿⣿⣿⣷⣦⣷⣄⠀⢀⣩⡄⠒⠈⠉⠀⣀⠔⢋⣤⣾⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡾⠟⣻⣧⠚⡹⢿⣿⣿⡿⠛⠁⣸⡌⠢⣤⣶⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⡿⠴⠒⢻⣿⣏⢀⡔⢉⡏⠀⠟⠀⡇⠸⡆⠘⣿⠿⡿⠻⡟⢯⡹⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀    ⠀")
        print("⠀⠀⠀⠀⠀⣠⣴⡿⣿⢱⠁⠀⠀⠈⢿⣿⣿⣄⣸⡀⠰⠦⠀⠃⠀⣷⠀⡇⠀⠙⡄⢸⣤⣿⣿⡙⢦⡀⠀⠀⠀⠀⠀⠀⠀    ⠀")
        print("⠀⢠⣶⣶⣿⠟⠁⣴⡏⠘⠀⠀⠀⠀⠀⠻⣿⡇⢸⠉⡓⠦⣠⣆⣠⣼⠄⣷⡶⢶⣿⣿⣿⠟⠁⠉⠓⢿⣆⡀⠀⠀⠀⠀⠀                                                 ")
        print("⣿⣿⣿⣿⡇⠀⠀⣿⣧⢰⣀⠀⠀⠀⢀⣴⢹⡟⠾⣧⣿⠀⡼⠀⣰⠏⣰⣿⣥⡿⡿⠋⠁⠀⠀⠀⠀⢀⠆⣵⣄⡀⠀⠀⠀                                                 ")
        print("⢀⣹⣿⣿⣿⡄⠀⣿⢸⡜⠿⠧⠄⢐⣚⣫⡼⠁⠀⠈⠻⣄⡇⣰⣯⠴⠛⠉⣼⢰⣣⠀⠀⠀⠀⠀⢀⠎⣸⠋⢿⣷⡀⠀⠀                                                 ")
        print("⠈⠻⣿⣿⣿⣿⣄⣿⡄⠙⠛⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠘⠉⠉⠀⠀⠀⠀⠻⣬⣛⠤⢄⡀⣠⣤⠎⣴⠃⠀⠈⢿⣷⡀⠀                                                 ")
        print("⠀⠀⠈⠻⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣙⣒⠮⣭⣉⡼⠁⢀⠀⠀⠈⢿⣷⡀                           \n")